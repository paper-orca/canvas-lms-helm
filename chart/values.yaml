# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

image:
  repository: ulevitsky/canvas-lms
  pullPolicy: IfNotPresent
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: canvas-lms

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  timeoutSeconds: 10
  periodSeconds: 60
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  timeoutSeconds: 10
  periodSeconds: 60

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}
tolerations: []
affinity: {}

# Dependency config
postgresql:
  enabled: true
  fullnameOverride: postgresql

redis:
  enabled: true
  fullnameOverride: redis
  architecture: standalone
  auth:
    enabled: false
  replica:
    replicaCount: 1
  url: redis://redis-master

web:
  securityContext: {}
  resources: {}  

job:
  securityContext: {}
  resources: {}  

rce:
  enabled: true
  replicaCount: 1
  port: 80
  service:
    type: ClusterIP
  image:
    repository: ulevitsky/canvas-rce-api
    tag: latest
  securityContext: {}
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http
  host: canvas-lms-rce:80
  statsd:
    host: 127.0.0.1
    port: 8125

# Init containers
initContainers:
  init-data:
    securityContext: {}
    resources: {}
    command:
    - bundle
    - exec
    - rake
    - db:create
    - db:migrate
    - db:configure_default_settings 
    - db:load_initial_data
    - brand_configs:generate_and_upload_all

# App config
config:
  init: true
  host: localhost:3000
  filesHost: localhost:3000
  setup:
    admin:
      email: flapjack@paperorca.com
    accountName: Paper Orca Co.
    statsCollection: opt_out
  database:
    host: postgresql
    name: canvas
  outgoingMail:
    smtp:
      host: smtp.sendgrid.net
      port: 587
      enableStarttls: true
      debug: false
    domain: orcapost.com
    outgoingAddress: demo@orcapost.com
    defaultName: demo
  storage:
    files:
      request: 5Gi
      className: standard-rwo
      accessMode: ReadWriteOnce
    log:
      request: 1Gi
      className: standard-rwo
      accessMode: ReadWriteOnce
    brandableCss:
      request: 50Mi
      className: standard-rwo
      accessMode: ReadWriteOnce

configFiles:
  domain.yml: |
    production:
      domain: {{ .Values.config.host | quote }}
      files_domain: {{ .Values.config.filesHost | quote }}
  cache_store.yml: |
    production:
      cache_store: redis_cache_store
  database.yml: |
    production:
      adapter: postgresql
      host: {{ .Values.config.database.host | quote }}
      database: {{ .Values.config.database.name | quote }}
      username: {{ .Values.config.database.username | quote }}
      password: {{ .Values.config.database.password | quote }}
      prepared_statements: false
  dynamic_settings.yml: |
    {{- if .Values.rce.enabled }}
    production:
      config:
        canvas:
          rich-content-service:
            app-host: {{ .Values.rce.host | quote }}
    {{- end }}
  vault_contents.yml: |
    {{- if .Values.rce.enabled }}
    production:
      "app-canvas/data/secrets":
        data:
          canvas_security:
            encryption_secret: {{ .Values.config.security.ecosystem.key }}
            signing_secret: {{ .Values.config.security.ecosystem.secret }}
    {{- end }}
  delayed_jobs.yml: |
    default:
      workers:
      - queue: canvas_queue
  file_store.yml: |
    production:
      storage: local
      path_prefix: tmp/files
  outgoing_mail.yml: |
    production:
      address: {{ .Values.config.outgoingMail.smtp.host | quote }}
      port: {{ .Values.config.outgoingMail.smtp.port | quote }}
      tls: {{ .Values.config.outgoingMail.smtp.tls }}
      enable_starttls: {{ .Values.config.outgoingMail.smtp.enableStarttls }}
      user_name: {{ .Values.config.outgoingMail.smtp.username | quote }}
      password: {{ .Values.config.outgoingMail.smtp.password | quote }}
      authentication: {{ .Values.config.outgoingMail.smtp.authentication | quote }}
      smtp_debug: {{ .Values.config.outgoingMail.smtp.debug }}
      domain: {{ .Values.config.outgoingMail.domain | quote }}
      outgoing_address: {{ .Values.config.outgoingMail.outgoingAddress | quote }}
      default_name: {{ .Values.config.outgoingMail.defaultName | quote }}
  redis.yml: |
    production:
      url: {{ .Values.redis.url | quote }}
      connect_timeout: 0.5
      circuit_breaker:
        error_threshold: 1
        error_timeout: 2
  security.yml: |
    production:
      encryption_key: <%= ENV.fetch("ENCRYPTION_KEY") %>
  environments__production-local.rb: |
    config.force_ssl = false
